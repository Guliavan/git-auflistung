/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
export namespace Components {
    interface AppListing {
    }
    interface AppRoot {
    }
    interface RepositoryContributorList {
        /**
          * An array of contributors JSON with format returned by Github API. Displaying keys that are considered for this component: [      {          avatar_url: 'http://some-image-url.tld',          login: 'loginname1',          contributions: 10,          url: 'http://somecontriburl.tld'      },      {          avatar_url: 'http://some-image-url-2.tld',          login: 'loginname2',          contributions: 12,          url: 'http://somecontriburl2.tld'      }  ]
         */
        "contributorList": Array<any>;
    }
    interface RepositoryDetail {
        /**
          * The repository info JSON with this format returned by Github API. Displaying keys that are considered for this component: {      name: 'Repository Name',      description: 'Repository Description'      language: 'English',      license: { name: 'License Name' },      stargazers_count: 345,      homepage: 'http://homepage.tld',      clone_url: 'http://git-clone-url.git.tld'  }
         */
        "repoInfo": any;
    }
}
declare global {
    interface HTMLAppListingElement extends Components.AppListing, HTMLStencilElement {
    }
    var HTMLAppListingElement: {
        prototype: HTMLAppListingElement;
        new (): HTMLAppListingElement;
    };
    interface HTMLAppRootElement extends Components.AppRoot, HTMLStencilElement {
    }
    var HTMLAppRootElement: {
        prototype: HTMLAppRootElement;
        new (): HTMLAppRootElement;
    };
    interface HTMLRepositoryContributorListElement extends Components.RepositoryContributorList, HTMLStencilElement {
    }
    var HTMLRepositoryContributorListElement: {
        prototype: HTMLRepositoryContributorListElement;
        new (): HTMLRepositoryContributorListElement;
    };
    interface HTMLRepositoryDetailElement extends Components.RepositoryDetail, HTMLStencilElement {
    }
    var HTMLRepositoryDetailElement: {
        prototype: HTMLRepositoryDetailElement;
        new (): HTMLRepositoryDetailElement;
    };
    interface HTMLElementTagNameMap {
        "app-listing": HTMLAppListingElement;
        "app-root": HTMLAppRootElement;
        "repository-contributor-list": HTMLRepositoryContributorListElement;
        "repository-detail": HTMLRepositoryDetailElement;
    }
}
declare namespace LocalJSX {
    interface AppListing {
    }
    interface AppRoot {
    }
    interface RepositoryContributorList {
        /**
          * An array of contributors JSON with format returned by Github API. Displaying keys that are considered for this component: [      {          avatar_url: 'http://some-image-url.tld',          login: 'loginname1',          contributions: 10,          url: 'http://somecontriburl.tld'      },      {          avatar_url: 'http://some-image-url-2.tld',          login: 'loginname2',          contributions: 12,          url: 'http://somecontriburl2.tld'      }  ]
         */
        "contributorList"?: Array<any>;
    }
    interface RepositoryDetail {
        /**
          * The repository info JSON with this format returned by Github API. Displaying keys that are considered for this component: {      name: 'Repository Name',      description: 'Repository Description'      language: 'English',      license: { name: 'License Name' },      stargazers_count: 345,      homepage: 'http://homepage.tld',      clone_url: 'http://git-clone-url.git.tld'  }
         */
        "repoInfo"?: any;
    }
    interface IntrinsicElements {
        "app-listing": AppListing;
        "app-root": AppRoot;
        "repository-contributor-list": RepositoryContributorList;
        "repository-detail": RepositoryDetail;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "app-listing": LocalJSX.AppListing & JSXBase.HTMLAttributes<HTMLAppListingElement>;
            "app-root": LocalJSX.AppRoot & JSXBase.HTMLAttributes<HTMLAppRootElement>;
            "repository-contributor-list": LocalJSX.RepositoryContributorList & JSXBase.HTMLAttributes<HTMLRepositoryContributorListElement>;
            "repository-detail": LocalJSX.RepositoryDetail & JSXBase.HTMLAttributes<HTMLRepositoryDetailElement>;
        }
    }
}
